{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\KholoodEa\\\\Projects\\\\React-Native\\\\Library\\\\Components\\\\Books.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"../styles\";\nimport { useBooksValue } from \"../context/books-context\";\nimport { BookForm } from \"./BookForm\";\nimport { Icon, Toast } from 'native-base';\nexport var Books = function Books() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useState3 = React.useState(Array(20).fill('').map(function (_, i) {\n    return {\n      key: \"\" + i,\n      text: \"item #\" + i\n    };\n  })),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      listData = _React$useState4[0],\n      setListData = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      books = _React$useState6[0],\n      setBooks = _React$useState6[1];\n\n  var fetchBooks = function fetchBooks() {\n    var apiCall, AllBooks;\n    return _regeneratorRuntime.async(function fetchBooks$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(' https://192.168.1.5:44330/api/books/getbook'));\n\n          case 2:\n            apiCall = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(apiCall.json());\n\n          case 5:\n            AllBooks = _context.sent;\n            setBooks(AllBooks);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  React.useEffect(function () {\n    var mounted = true;\n\n    if (mounted) {\n      fetchBooks();\n      console.log(books);\n    }\n\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n\n  var closeRow = function closeRow(rowMap, rowKey) {\n    if (rowMap[rowKey]) {\n      rowMap[rowKey].closeRow();\n    }\n  };\n\n  var deleteRow = function deleteRow(rowMap, rowKey) {\n    closeRow(rowMap, rowKey);\n\n    var newData = _toConsumableArray(listData);\n\n    var prevIndex = listData.findIndex(function (item) {\n      return item.key === rowKey;\n    });\n    newData.splice(prevIndex, 1);\n    setListData(newData);\n    Toast.show({\n      text: 'Removed',\n      duration: 900\n    });\n  };\n\n  var onRowDidOpen = function onRowDidOpen(rowKey) {\n    console.log('This row opened', rowKey);\n  };\n\n  var renderItem = function renderItem(data) {\n    return React.createElement(TouchableHighlight, {\n      onPress: function onPress() {\n        return console.log('You touched me');\n      },\n      style: styles.rowFront,\n      underlayColor: '#AAA',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, data.item.Name, \" -\", data.item.Auther, \"-\", data.item.Copies, \"-\", data.item.MaxCop)));\n  };\n\n  var renderHiddenItem = function renderHiddenItem(data, rowMap) {\n    return React.createElement(View, {\n      style: styles.rowBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setVisible(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 14\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"Edit\")), React.createElement(TouchableOpacity, {\n      style: [styles.backRightBtn, styles.backRightBtnRight],\n      onPress: function onPress() {\n        return deleteRow(rowMap, data.item.key);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, React.createElement(Icon, {\n      type: \"EvilIcons\",\n      name: \"trash\",\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(SwipeListView, {\n    data: books,\n    renderItem: renderItem,\n    renderHiddenItem: renderHiddenItem,\n    leftOpenValue: 60,\n    rightOpenValue: -75,\n    previewRowKey: '0',\n    previewOpenValue: -40,\n    previewOpenDelay: 3000,\n    onRowDidOpen: onRowDidOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: visible,\n    onRequestClose: function onRequestClose() {\n      return setVisible(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginLeft: 280\n    },\n    onPress: function onPress() {\n      setVisible(!visible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, React.createElement(Icon, {\n    type: \"Feather\",\n    name: \"x\",\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  })), React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\",\n      fontSize: 18,\n      marginRight: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, \"Edit Book Info\"), React.createElement(BookForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableHighlight, {\n    style: _objectSpread({}, styles.openButton, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      return Toast.show({\n        text: 'Changes Saved',\n        duration: 900\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, \"Submit Changes\")))));\n};","map":{"version":3,"sources":["C:/KholoodEa/Projects/React-Native/Library/Components/Books.js"],"names":["React","SwipeListView","styles","useBooksValue","BookForm","Icon","Toast","Books","useState","visible","setVisible","Array","fill","map","_","i","key","text","listData","setListData","books","setBooks","fetchBooks","fetch","apiCall","json","AllBooks","useEffect","mounted","console","log","closeRow","rowMap","rowKey","deleteRow","newData","prevIndex","findIndex","item","splice","show","duration","onRowDidOpen","renderItem","data","rowFront","Name","Auther","Copies","MaxCop","renderHiddenItem","rowBack","backRightBtn","backRightBtnRight","color","container","modalView","marginLeft","fontWeight","fontSize","marginRight","openButton","backgroundColor","textStyle"],"mappings":"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","sourcesContent":["import React from 'react'; \r\nimport { SwipeListView } from 'react-native-swipe-list-view';\r\nimport {Modal,Text,TouchableOpacity,TouchableHighlight,View} from 'react-native';\r\nimport { styles } from \"../styles\";\r\nimport {useBooksValue} from '../context/books-context'\r\nimport { BookForm } from \"./BookForm\";\r\nimport { Icon,Toast } from 'native-base';\r\nexport const Books = () => {\r\n    const [visible, setVisible] = React.useState(false);\r\n    // const {books,setBooks}=useBooksValue();\r\n\r\n\r\n    const [listData, setListData] = React.useState(\r\n        Array(20)\r\n            .fill('')\r\n            .map((_, i) => ({ key: `${i}`, text: `item #${i}` }))\r\n    );\r\n    const [books, setBooks] = React.useState([])\r\n   const fetchBooks = async () => {\r\n\r\n    //   const apiCall = await fetch('https://localhost:44330/api/books/getbook');\r\n    const apiCall = await fetch(' https://192.168.1.5:44330/api/books/getbook');\r\n\r\n      const AllBooks = await apiCall.json();     \r\n        setBooks(AllBooks)  }  \r\n        // console.log(apiCall)\r\n\r\nReact.useEffect(()=>{\r\nlet mounted=true;\r\nif(mounted){\r\n\r\n  fetchBooks();\r\n  console.log(books)\r\n}\r\n  return()=>mounted=false;\r\n     },[]); \r\n\r\n    const closeRow = (rowMap, rowKey) => {\r\n        if (rowMap[rowKey]) {\r\n            rowMap[rowKey].closeRow();\r\n        }\r\n    };\r\n\r\n    const deleteRow = (rowMap, rowKey) => {\r\n        closeRow(rowMap, rowKey);\r\n        const newData = [...listData];\r\n        const prevIndex = listData.findIndex(item => item.key === rowKey);\r\n        newData.splice(prevIndex, 1);\r\n        setListData(newData);\r\n        Toast.show({\r\n            text: 'Removed',\r\n            duration: 900,\r\n          })\r\n        \r\n    };\r\n\r\n    const onRowDidOpen = rowKey => {\r\n        console.log('This row opened', rowKey);\r\n    };\r\n\r\n    const renderItem = data => (\r\n        <TouchableHighlight\r\n            onPress={() => console.log('You touched me')}\r\n            style={styles.rowFront}\r\n            underlayColor={'#AAA'}\r\n\r\n        >\r\n            <View>\r\n                {/* <Text>I am {data.item.text} in a List</Text> */}\r\n                <Text>{data.item.Name} -\r\n                {data.item.Auther}-\r\n               {data.item.Copies}-\r\n                {data.item.MaxCop}</Text>\r\n            </View>\r\n        </TouchableHighlight>\r\n    );\r\n\r\n    const renderHiddenItem = (data, rowMap) => (\r\n        <View style={styles.rowBack}>\r\n             <TouchableOpacity\r\n                onPress={() => setVisible(true)}\r\n            >\r\n                <Text >Edit</Text>\r\n            </TouchableOpacity>\r\n            \r\n            {/* <TouchableOpacity\r\n                style={[styles.backRightBtn, styles.backRightBtnLeft]}\r\n                onPress={() => closeRow(rowMap, data.item.key)}\r\n            >\r\n                <Text style={styles.backTextWhite}>Close</Text>\r\n            </TouchableOpacity> */}\r\n            <TouchableOpacity\r\n                style={[styles.backRightBtn, styles.backRightBtnRight]}\r\n                onPress={() => deleteRow(rowMap, data.item.key)}\r\n            >\r\n                <Icon type='EvilIcons' name='trash' style={{color:'black'}}></Icon>\r\n                {/* <Text style={styles.backTextWhite}>Delete</Text> */}\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <SwipeListView\r\n                // data={listData}\r\n                data={books}\r\n\r\n                renderItem={renderItem}\r\n                renderHiddenItem={renderHiddenItem}\r\n                leftOpenValue={60}\r\n                rightOpenValue={-75}\r\n\r\n                // rightOpenValue={-150}\r\n                previewRowKey={'0'}\r\n                previewOpenValue={-40}\r\n                previewOpenDelay={3000}\r\n                onRowDidOpen={onRowDidOpen}\r\n            />\r\n            <Modal\r\n  animationType=\"slide\"\r\n  transparent={true}\r\n  visible={visible}\r\n  onRequestClose={() =>setVisible(false)}\r\n>\r\n  {/* <View style={styles.centeredView}> */}\r\n    <View style={styles.modalView}>\r\n    <Text style={{marginLeft:280 }} onPress={() => {setVisible(!visible); }}>\r\n    <Icon type=\"Feather\" name=\"x\" style={{color:'red'}}></Icon>\r\n    </Text>\r\n    <Text style={{ fontWeight: \"bold\",fontSize:18,marginRight:100}}>Edit Book Info \r\n    \r\n    </Text>\r\n      <BookForm/>\r\n      <TouchableHighlight\r\n        style={{ ...styles.openButton, backgroundColor: \"#2196F3\"}}\r\n        onPress={() => Toast.show({\r\n            text: 'Changes Saved',\r\n            duration: 900,\r\n          })}\r\n      >\r\n        <Text style={styles.textStyle}>Submit Changes</Text>\r\n      </TouchableHighlight>\r\n    </View>\r\n  {/* </View> */}\r\n</Modal>\r\n          \r\n        </View>\r\n\r\n    \r\n    )\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}