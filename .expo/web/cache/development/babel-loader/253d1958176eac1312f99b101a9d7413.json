{"ast":null,"code":"var _jsxFileName = \"C:\\\\KholoodEa\\\\Projects\\\\React-Native\\\\Library\\\\context\\\\process-context.js\";\nimport React, { createContext, useContext } from 'react';\nimport { useProcesses } from \"../hooks\";\nexport var ProcessesContext = createContext();\nexport var ProcessesProvider = function ProcessesProvider(_ref) {\n  var children = _ref.children;\n\n  var _useProcesses = useProcesses(),\n      processes = _useProcesses.processes,\n      setProcesses = _useProcesses.setProcesses;\n\n  return React.createElement(ProcessesContext.Provider, {\n    value: {\n      processes: processes,\n      setProcesses: setProcesses\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport var useProcessesValue = function useProcessesValue() {\n  return useContext(ProcessesContext);\n};","map":{"version":3,"sources":["C:/KholoodEa/Projects/React-Native/Library/context/process-context.js"],"names":["React","createContext","useContext","useProcesses","ProcessesContext","ProcessesProvider","children","processes","setProcesses","useProcessesValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAAQC,YAAR;AAEA,OAAO,IAAMC,gBAAgB,GAACH,aAAa,EAApC;AACP,OAAO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAAA,sBACdH,YAAY,EADE;AAAA,MACvCI,SADuC,iBACvCA,SADuC;AAAA,MAC5BC,YAD4B,iBAC5BA,YAD4B;;AAE7C,SACI,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAG;AAACD,MAAAA,SAAS,EAATA,SAAD;AAAYC,MAAAA,YAAY,EAAZA;AAAZ,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,QADD,CADJ;AAMH,CARM;AASP,OAAO,IAAMG,iBAAiB,GAAC,SAAlBA,iBAAkB;AAAA,SAAIP,UAAU,CAACE,gBAAD,CAAd;AAAA,CAAxB","sourcesContent":["import React, { createContext, useContext } from 'react';\r\nimport {useProcesses} from '../hooks'\r\n\r\nexport const ProcessesContext=createContext();\r\nexport const ProcessesProvider = ({children}) => {\r\n    const{processes, setProcesses}=useProcesses();\r\n    return(\r\n        <ProcessesContext.Provider value ={{processes, setProcesses}}>\r\n        {children}\r\n        </ProcessesContext.Provider>\r\n\r\n    )\r\n}\r\nexport const useProcessesValue=()=>useContext(ProcessesContext)"]},"metadata":{},"sourceType":"module"}