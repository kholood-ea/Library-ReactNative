{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\KholoodEa\\\\Projects\\\\React-Native\\\\Library\\\\Components\\\\BooksBorrowed.js\";\nimport React, { Component, useState } from 'react';\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"../styles\";\nexport var BooksBorrowed = function BooksBorrowed() {\n  var _useState = useState(Array(10).fill('').map(function (_, i) {\n    return {\n      key: \"\" + i,\n      text: \"item #\" + i\n    };\n  })),\n      _useState2 = _slicedToArray(_useState, 2),\n      listData = _useState2[0],\n      setListData = _useState2[1];\n\n  var closeRow = function closeRow(rowMap, rowKey) {\n    if (rowMap[rowKey]) {\n      rowMap[rowKey].closeRow();\n    }\n  };\n\n  var deleteRow = function deleteRow(rowMap, rowKey) {\n    closeRow(rowMap, rowKey);\n\n    var newData = _toConsumableArray(listData);\n\n    var prevIndex = listData.findIndex(function (item) {\n      return item.key === rowKey;\n    });\n    newData.splice(prevIndex, 1);\n    setListData(newData);\n  };\n\n  var onRowDidOpen = function onRowDidOpen(rowKey) {\n    console.log('This row opened', rowKey);\n  };\n\n  var renderItem = function renderItem(data) {\n    return React.createElement(TouchableHighlight, {\n      onPress: function onPress() {\n        return console.log('You touched me');\n      },\n      style: styles.rowFront,\n      underlayColor: '#AAA',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"I am \", data.item.text, \" in a List\")));\n  };\n\n  var renderHiddenItem = function renderHiddenItem(data, rowMap) {\n    return React.createElement(View, {\n      style: styles.rowBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"Left\"), React.createElement(TouchableOpacity, {\n      style: [styles.backRightBtn, styles.backRightBtnLeft],\n      onPress: function onPress() {\n        return closeRow(rowMap, data.item.key);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.backTextWhite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"Close\")), React.createElement(TouchableOpacity, {\n      style: [styles.backRightBtn, styles.backRightBtnRight],\n      onPress: function onPress() {\n        return deleteRow(rowMap, data.item.key);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.backTextWhite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"Delete\")));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(SwipeListView, {\n    data: listData,\n    renderItem: renderItem,\n    renderHiddenItem: renderHiddenItem,\n    leftOpenValue: 75,\n    rightOpenValue: -150,\n    previewRowKey: '0',\n    previewOpenValue: -40,\n    previewOpenDelay: 3000,\n    onRowDidOpen: onRowDidOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["C:/KholoodEa/Projects/React-Native/Library/Components/BooksBorrowed.js"],"names":["React","Component","useState","SwipeListView","styles","BooksBorrowed","Array","fill","map","_","i","key","text","listData","setListData","closeRow","rowMap","rowKey","deleteRow","newData","prevIndex","findIndex","item","splice","onRowDidOpen","console","log","renderItem","data","rowFront","renderHiddenItem","rowBack","backRightBtn","backRightBtnLeft","backTextWhite","backRightBtnRight","container"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,aAAT,QAA8B,8BAA9B;;;;;AAEA,SAASC,MAAT;AAGA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,kBACCH,QAAQ,CACpCI,KAAK,CAAC,EAAD,CAAL,CACKC,IADL,CACU,EADV,EAEKC,GAFL,CAES,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAW;AAAEC,MAAAA,GAAG,OAAKD,CAAV;AAAeE,MAAAA,IAAI,aAAWF;AAA9B,KAAX;AAAA,GAFT,CADoC,CADT;AAAA;AAAA,MACxBG,QADwB;AAAA,MACdC,WADc;;AAO/B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAASC,MAAT,EAAoB;AACjC,QAAID,MAAM,CAACC,MAAD,CAAV,EAAoB;AAChBD,MAAAA,MAAM,CAACC,MAAD,CAAN,CAAeF,QAAf;AACH;AACJ,GAJD;;AAMA,MAAMG,SAAS,GAAG,SAAZA,SAAY,CAACF,MAAD,EAASC,MAAT,EAAoB;AAClCF,IAAAA,QAAQ,CAACC,MAAD,EAASC,MAAT,CAAR;;AACA,QAAME,OAAO,sBAAON,QAAP,CAAb;;AACA,QAAMO,SAAS,GAAGP,QAAQ,CAACQ,SAAT,CAAmB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACX,GAAL,KAAaM,MAAjB;AAAA,KAAvB,CAAlB;AACAE,IAAAA,OAAO,CAACI,MAAR,CAAeH,SAAf,EAA0B,CAA1B;AACAN,IAAAA,WAAW,CAACK,OAAD,CAAX;AACH,GAND;;AAQA,MAAMK,YAAY,GAAG,SAAfA,YAAe,CAAAP,MAAM,EAAI;AAC3BQ,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BT,MAA/B;AACH,GAFD;;AAIA,MAAMU,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI;AAAA,WACnB,oBAAC,kBAAD;AACI,MAAA,OAAO,EAAE;AAAA,eAAMH,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAAA,OADb;AAEI,MAAA,KAAK,EAAEtB,MAAM,CAACyB,QAFlB;AAGI,MAAA,aAAa,EAAE,MAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYD,IAAI,CAACN,IAAL,CAAUV,IAAtB,eADJ,CALJ,CADmB;AAAA,GAAvB;;AAYA,MAAMkB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,IAAD,EAAOZ,MAAP;AAAA,WACrB,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEZ,MAAM,CAAC2B,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,gBAAD;AACI,MAAA,KAAK,EAAE,CAAC3B,MAAM,CAAC4B,YAAR,EAAsB5B,MAAM,CAAC6B,gBAA7B,CADX;AAEI,MAAA,OAAO,EAAE;AAAA,eAAMlB,QAAQ,CAACC,MAAD,EAASY,IAAI,CAACN,IAAL,CAAUX,GAAnB,CAAd;AAAA,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,MAAM,CAAC8B,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,CAFJ,EAQI,oBAAC,gBAAD;AACI,MAAA,KAAK,EAAE,CAAC9B,MAAM,CAAC4B,YAAR,EAAsB5B,MAAM,CAAC+B,iBAA7B,CADX;AAEI,MAAA,OAAO,EAAE;AAAA,eAAMjB,SAAS,CAACF,MAAD,EAASY,IAAI,CAACN,IAAL,CAAUX,GAAnB,CAAf;AAAA,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,MAAM,CAAC8B,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CARJ,CADqB;AAAA,GAAzB;;AAkBA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9B,MAAM,CAACgC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AACI,IAAA,IAAI,EAAEvB,QADV;AAEI,IAAA,UAAU,EAAEc,UAFhB;AAGI,IAAA,gBAAgB,EAAEG,gBAHtB;AAII,IAAA,aAAa,EAAE,EAJnB;AAKI,IAAA,cAAc,EAAE,CAAC,GALrB;AAMI,IAAA,aAAa,EAAE,GANnB;AAOI,IAAA,gBAAgB,EAAE,CAAC,EAPvB;AAQI,IAAA,gBAAgB,EAAE,IARtB;AASI,IAAA,YAAY,EAAEN,YATlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAmBH,CA1EM","sourcesContent":["import React, { Component,useState } from 'react';   \r\nimport { SwipeListView } from 'react-native-swipe-list-view';\r\nimport { Text,TouchableOpacity,TouchableHighlight,View} from 'react-native';\r\nimport { styles } from \"../styles\";\r\n\r\n\r\nexport const BooksBorrowed = () => {\r\n    const [listData, setListData] = useState(\r\n        Array(10)\r\n            .fill('')\r\n            .map((_, i) => ({ key: `${i}`, text: `item #${i}` }))\r\n    );\r\n\r\n    const closeRow = (rowMap, rowKey) => {\r\n        if (rowMap[rowKey]) {\r\n            rowMap[rowKey].closeRow();\r\n        }\r\n    };\r\n\r\n    const deleteRow = (rowMap, rowKey) => {\r\n        closeRow(rowMap, rowKey);\r\n        const newData = [...listData];\r\n        const prevIndex = listData.findIndex(item => item.key === rowKey);\r\n        newData.splice(prevIndex, 1);\r\n        setListData(newData);\r\n    };\r\n\r\n    const onRowDidOpen = rowKey => {\r\n        console.log('This row opened', rowKey);\r\n    };\r\n\r\n    const renderItem = data => (\r\n        <TouchableHighlight\r\n            onPress={() => console.log('You touched me')}\r\n            style={styles.rowFront}\r\n            underlayColor={'#AAA'}\r\n        >\r\n            <View>\r\n                <Text>I am {data.item.text} in a List</Text>\r\n            </View>\r\n        </TouchableHighlight>\r\n    );\r\n\r\n    const renderHiddenItem = (data, rowMap) => (\r\n        <View style={styles.rowBack}>\r\n            <Text>Left</Text>\r\n            <TouchableOpacity\r\n                style={[styles.backRightBtn, styles.backRightBtnLeft]}\r\n                onPress={() => closeRow(rowMap, data.item.key)}\r\n            >\r\n                <Text style={styles.backTextWhite}>Close</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n                style={[styles.backRightBtn, styles.backRightBtnRight]}\r\n                onPress={() => deleteRow(rowMap, data.item.key)}\r\n            >\r\n                <Text style={styles.backTextWhite}>Delete</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <SwipeListView\r\n                data={listData}\r\n                renderItem={renderItem}\r\n                renderHiddenItem={renderHiddenItem}\r\n                leftOpenValue={75}\r\n                rightOpenValue={-150}\r\n                previewRowKey={'0'}\r\n                previewOpenValue={-40}\r\n                previewOpenDelay={3000}\r\n                onRowDidOpen={onRowDidOpen}\r\n            />\r\n\r\n          \r\n        </View>\r\n        \r\n    )\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}