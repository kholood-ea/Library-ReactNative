{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nexport var useBooks = function useBooks() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var fetchBooks = function fetchBooks() {\n    var apiCall, AllBooks;\n    return _regeneratorRuntime.async(function fetchBooks$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://localhost:44330/api/books/getbook'));\n\n          case 2:\n            apiCall = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(apiCall.json());\n\n          case 5:\n            AllBooks = _context.sent;\n            setBooks(AllBooks);\n            useEffect(function () {\n              var mounted = true;\n\n              if (mounted) {\n                fetchBooks();\n              }\n\n              return function () {\n                return mounted = false;\n              };\n            }, []);\n            return _context.abrupt(\"return\", {\n              books: books,\n              setBooks: setBooks\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var usePersons = function usePersons() {\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      persons = _useState4[0],\n      setPersons = _useState4[1];\n\n  useEffect(function () {\n    var mounted = true;\n\n    var fetchppl = function fetchppl() {\n      var apiCall, ppl;\n      return _regeneratorRuntime.async(function fetchppl$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://localhost:44330/api/persons/getperson'));\n\n            case 2:\n              apiCall = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(apiCall.json());\n\n            case 5:\n              ppl = _context2.sent;\n\n              if (mounted) {\n                setPersons(ppl);\n              }\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchppl();\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n  return {\n    persons: persons,\n    setPersons: setPersons\n  };\n};\nexport var useProcesses = function useProcesses() {\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      processes = _useState6[0],\n      setProcesses = _useState6[1];\n\n  useEffect(function () {\n    var mounted = true;\n\n    var fetchBooksBorrowed = function fetchBooksBorrowed() {\n      var apiCall, BooksBorrowed;\n      return _regeneratorRuntime.async(function fetchBooksBorrowed$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://localhost:44330/api/book_borrower/getbook_borrower'));\n\n            case 2:\n              apiCall = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(apiCall.json());\n\n            case 5:\n              BooksBorrowed = _context3.sent;\n\n              if (mounted) {\n                setProcesses(BooksBorrowed);\n              }\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchBooksBorrowed();\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n  return {\n    processes: processes,\n    setProcesses: setProcesses\n  };\n};","map":{"version":3,"sources":["C:/KholoodEa/Projects/React-Native/Library/hooks/index.js"],"names":["React","useState","useEffect","useBooks","books","setBooks","fetchBooks","fetch","apiCall","json","AllBooks","mounted","usePersons","persons","setPersons","fetchppl","ppl","useProcesses","processes","setProcesses","fetchBooksBorrowed","BooksBorrowed"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AAKA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBACFF,QAAQ,CAAC,EAAD,CADN;AAAA;AAAA,MACrBG,KADqB;AAAA,MACdC,QADc;;AAE3B,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACMC,KAAK,CAAC,2CAAD,CADX;;AAAA;AACVC,YAAAA,OADU;AAAA;AAAA,6CAEOA,OAAO,CAACC,IAAR,EAFP;;AAAA;AAEVC,YAAAA,QAFU;AAGdL,YAAAA,QAAQ,CAACK,QAAD,CAAR;AAERR,YAAAA,SAAS,CAAC,YAAI;AACd,kBAAIS,OAAO,GAAC,IAAZ;;AACA,kBAAGA,OAAH,EAAW;AAETL,gBAAAA,UAAU;AACX;;AACC,qBAAM;AAAA,uBAAIK,OAAO,GAAC,KAAZ;AAAA,eAAN;AACI,aAPG,EAOF,EAPE,CAAT;AALsB,6CAab;AAACP,cAAAA,KAAK,EAALA,KAAD;AAAQC,cAAAA,QAAQ,EAARA;AAAR,aAba;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;AAeF,CAjBM;AAoBP,OAAO,IAAMO,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,mBAEAX,QAAQ,CAAC,EAAD,CAFR;AAAA;AAAA,MAEvBY,OAFuB;AAAA,MAEdC,UAFc;;AAI9BZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIS,OAAO,GAAC,IAAZ;;AACA,QAAMI,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACOR,KAAK,CAAC,+CAAD,CADZ;;AAAA;AACTC,cAAAA,OADS;AAAA;AAAA,+CAEGA,OAAO,CAACC,IAAR,EAFH;;AAAA;AAETO,cAAAA,GAFS;;AAIf,kBAAGL,OAAH,EAAW;AAACG,gBAAAA,UAAU,CAACE,GAAD,CAAV;AAAmB;;AAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAMED,IAAAA,QAAQ;AAEd,WAAM;AAAA,aAAIJ,OAAO,GAAC,KAAZ;AAAA,KAAN;AACG,GAXQ,EAWN,EAXM,CAAT;AAYA,SAAO;AAAEE,IAAAA,OAAO,EAAPA,OAAF;AAAWC,IAAAA,UAAU,EAAVA;AAAX,GAAP;AAED,CAlBM;AAoBP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,mBACEhB,QAAQ,CAAC,EAAD,CADV;AAAA;AAAA,MACzBiB,SADyB;AAAA,MACdC,YADc;;AAGhCjB,EAAAA,SAAS,CAAC,YAAM;AAEd,QAAIS,OAAO,GAAC,IAAZ;;AACA,QAAMS,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACHb,KAAK,CAAC,4DAAD,CADF;;AAAA;AACnBC,cAAAA,OADmB;AAAA;AAAA,+CAEGA,OAAO,CAACC,IAAR,EAFH;;AAAA;AAEnBY,cAAAA,aAFmB;;AAIzB,kBAAGV,OAAH,EAAW;AAACQ,gBAAAA,YAAY,CAACE,aAAD,CAAZ;AAA+B;;AAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3B;;AAMED,IAAAA,kBAAkB;AAepB,WAAM;AAAA,aAAIT,OAAO,GAAC,KAAZ;AAAA,KAAN;AAED,GA1BQ,EA0BN,EA1BM,CAAT;AA4BA,SAAO;AAAEO,IAAAA,SAAS,EAATA,SAAF;AAAaC,IAAAA,YAAY,EAAZA;AAAb,GAAP;AAED,CAjCM","sourcesContent":["import React, { useState, useEffect} from \"react\";\r\n// import $ from \"jquery\";\r\n\r\n\r\n\r\nexport const useBooks = () => {\r\n  const [books, setBooks] = useState([])\r\n   const fetchBooks = async () => {\r\n      const apiCall = await fetch('https://localhost:44330/api/books/getbook');\r\n      const AllBooks = await apiCall.json();     \r\n        setBooks(AllBooks)    \r\n  \r\nuseEffect(()=>{\r\nlet mounted=true;\r\nif(mounted){\r\n\r\n  fetchBooks();\r\n}\r\n  return()=>mounted=false;\r\n     },[]); \r\n  return {books, setBooks }\r\n}\r\n}\r\n\r\n\r\nexport const usePersons = () => {\r\n\r\n  const [persons, setPersons] = useState([])\r\n\r\n  useEffect(() => {\r\n    let mounted=true;\r\n    const fetchppl = async () => {\r\n      const apiCall = await fetch('https://localhost:44330/api/persons/getperson');\r\n      const ppl = await apiCall.json();     \r\n      \r\n      if(mounted){setPersons(ppl)   } \r\n      }  \r\n      fetchppl()\r\n\r\nreturn()=>mounted=false;\r\n  }, []);\r\n  return { persons, setPersons };\r\n\r\n}\r\n\r\nexport const useProcesses = () => {\r\n  const [processes, setProcesses] = useState([])\r\n\r\n  useEffect(() => {\r\n\r\n    let mounted=true;\r\n    const fetchBooksBorrowed = async () => {\r\n      const apiCall = await fetch('https://localhost:44330/api/book_borrower/getbook_borrower');\r\n      const BooksBorrowed = await apiCall.json();     \r\n      \r\n      if(mounted){setProcesses(BooksBorrowed)   } \r\n      }  \r\n      fetchBooksBorrowed()\r\n\r\n      // $.ajax({\r\n      //   type: 'GET',\r\n      //   url: 'https://localhost:44330/api/book_borrower/getbook_borrower',\r\n      //   dataType: 'json',\r\n      //   success: function (data) {\r\n      //     JSON.stringify(data)\r\n      //           if(mounted){\r\n      //     setProcesses(data)\r\n      //           }\r\n\r\n      //   }\r\n      // })\r\n    \r\n    return()=>mounted=false;\r\n  \r\n  }, []);\r\n\r\n  return { processes, setProcesses };\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}